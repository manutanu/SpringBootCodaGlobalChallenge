{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modals/details-edit/details-edit.component.ts","./src/app/modals/details-edit/details-edit.component.html","./src/app/modals/login/login.component.ts","./src/app/modals/login/login.component.html","./src/app/services/user-detail.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { DetailsEditComponent } from './modals/details-edit/details-edit.component';\nimport { UserDetailService } from './services/user-detail.service';\nimport { Candidates } from './dto/candidates';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginComponent } from './modals/login/login.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Users } from './dto/users';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title: string = 'Vote For The Best Hacker';\n  candidateList: Candidates[] = [];\n  loggedIn: boolean = false;\n\n  constructor(private userDetailService: UserDetailService , public dialog: MatDialog){\n  }\n\n  ngOnInit(): void {\n    localStorage.setItem('userdata' , '');\n    this.userDetailService.fetchAllCandidates().subscribe(data => {\n      this.candidateList = data;\n    } , error => {\n      console.log(error);\n    });\n  }\n\n  login(): void {\n    const dialogRef = this.dialog.open(LoginComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'yes'){\n        this.loggedIn = true;\n      }\n    });\n  }\n\n  logout(): void {\n\n    this.loggedIn = false;\n    localStorage.setItem('userdata' , '');\n  }\n\n  addNewUser(): void {\n    if (localStorage.getItem('userdata') != null && localStorage.getItem('userdata') != ''){\n      const users: Users = JSON.parse(localStorage.getItem('userdata'));\n        if (users.role.roleId === 1){\n          const dialogRef = this.dialog.open(DetailsEditComponent , {data:{flag:'new'}});\n\n          dialogRef.afterClosed().subscribe(result => {\n            if(!!result)\n              this.candidateList.unshift(result);\n          });\n        }else{\n          alert('You are not admin please login with admin creds');\n        }\n    }else{\n      alert('You are not admin please login with admin creds');\n    }\n  }\n\n  castVote(candidate : Candidates): void {\n    if(localStorage.getItem('userdata') != null\n    && localStorage.getItem('userdata') != undefined\n    && localStorage.getItem('userdata') != ''  ){\n      let user: Users = JSON.parse(localStorage.getItem('userdata'));\n      if(user.userVoted != true){\n        this.userDetailService.castVote(candidate.candidate.candidateId , user.userId)\n        .subscribe(data => {\n          candidate.votesCount++;\n          user.userVoted = true;\n          localStorage.setItem('userdata', JSON.stringify(user));\n        }, error => {\n          alert('Cant cast vote right now may be you have already voted once');\n        });\n      }else{\n        alert('You have already voted once');\n      }\n    }else{\n      this.userDetailService.castVote(candidate.candidate.candidateId , -1)\n      .subscribe(data => {\n        candidate.votesCount++;\n      }, error => {\n        alert('Cant cast vote right now may be you have already voted once')\n      });\n    }\n  }\n\n  editDetails(candidate: Candidates): void {\n    if (localStorage.getItem('userdata') != null && localStorage.getItem('userdata') != ''){\n      const users: Users = JSON.parse(localStorage.getItem('userdata'));\n        if (users.role.roleId === 1 || (users.role.roleId === 2 && users.userId === candidate.userId)){\n          const dialogRef = this.dialog.open(DetailsEditComponent , {data:{flag:'edit' , candidate: candidate}});\n\n          dialogRef.afterClosed().subscribe(result => {\n            if(!!result)\n              this.candidateList.unshift(result);\n          });\n        }else{\n          alert('You are not admin or The Same Candidate whose details you want to edit ');\n        }\n    }else{\n      alert('You are not admin please login with admin creds');\n    }\n  }\n\n  seeDetails(candidate: Candidates): void {\n\n    const dialogRef = this.dialog.open(DetailsEditComponent, { data: { flag: 'detail', candidate: candidate } });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!!result)\n        this.candidateList.unshift(result);\n    });\n  }\n\n  deleteCandidate(candidate: Candidates): void {\n    if (localStorage.getItem('userdata') != null && localStorage.getItem('userdata') != ''){\n      const users: Users = JSON.parse(localStorage.getItem('userdata'));\n        if (users.role.roleId === 1 ){\n          this.userDetailService.deleteCandidate(candidate.candidate.candidateId , candidate.userId)\n          .subscribe(data => {\n            if( data === true ){\n              this.candidateList.splice(this.candidateList.findIndex((cand) => cand.userId === candidate.userId ) , 1);\n            }\n          } , error=>{\n            alert('Cant delete candidate');\n          })\n        }else{\n          alert('Please login with Admin creds to delete candidate');\n        }\n      }else{\n        alert('Please login with Admin creds to delete candidate');\n      }\n  }\n\n}\n","<div class=\"pagewrapper\">\n  <div class=\"pageheader\">\n    <h1>{{title}}</h1><h5 class=\"logo-cls\">Brought to you by Coda Global</h5>\n    <div class=\"authheader\">\n      <button mat-mini-fab color=\"primary\"  aria-label=\"Example icon button with a menu icon\" matTooltip=\"Add new Candidate\" (click)=\"addNewUser()\">\n        <mat-icon>add</mat-icon>\n      </button>\n      <button mat-raised-button color=\"primary\" color=\"warn\" aria-label=\"Example icon button with a menu icon\" matTooltip=\"Login\" *ngIf=\"!loggedIn\" (click)=\"login()\">\n        Login\n      </button>\n      <button mat-raised-button color=\"primary\" color=\"accent\" aria-label=\"Example icon button with a menu icon\" matTooltip=\"Logout\" *ngIf=\"loggedIn\" (click)=\"logout()\">\n        Logout\n      </button>\n  </div>\n  </div>\n  <div class=\"pagebody\">\n  <div *ngFor=\"let candidate of candidateList\" class=\"cardList\">\n    <mat-card><div>\n      <div class=\"cardheader\">Candidate Name :<span class=\"nameplate\"> {{candidate.userName}}</span></div>\n      <div class=\"cardbody\">\n        <span>Challenges Solved : {{candidate.candidate.candidateChallSolved}}</span>\n        <span>Expertise Level : {{candidate.candidate.candidateExperLevel}}</span>\n      </div>\n      <div class=\"actionsection\">\n        <button mat-mini-fab color=\"primary\" color=\"warn\" aria-label=\"Example icon button with a menu icon\" matTooltip=\"Delete This Candidate\" (click)=\"deleteCandidate(candidate)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-mini-fab color=\"primary\" color=\"accent\" aria-label=\"Example icon button with a menu icon\" matTooltip=\"Edit This Candidate not Implemented\" (click)=\"editDetails(candidate)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <!--  -->\n        <button mat-raised-button color=\"primary\" [matBadge]=\"candidate.votesCount == null ? 0 : candidate.votesCount \"\n           matBadgePosition=\"after\" matBadgeColor=\"accent\" (click)=\"castVote(candidate)\" matTooltip=\"Vote for this Candidate\">Vote\n       </button>\n       <button mat-raised-button color=\"primary\" (click)=\"seeDetails(candidate)\" matTooltip=\"See Full details Of the candidate\">Details\n       </button>\n      </div>\n    </div></mat-card>\n  </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { LoginComponent } from './modals/login/login.component';\nimport { DetailsEditComponent } from './modals/details-edit/details-edit.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DetailsEditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatTableModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatDialogModule,\n    MatTooltipModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [LoginComponent , DetailsEditComponent]\n})\nexport class AppModule { }\n","import { Candidates, CandidateDetail } from './../../dto/candidates';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserDetailService } from 'src/app/services/user-detail.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CandidateRegisterRequest, Skills } from 'src/app/dto/candidateRegisterReq';\n\n@Component({\n  selector: 'app-details-edit',\n  templateUrl: './details-edit.component.html',\n  styleUrls: ['./details-edit.component.css']\n})\nexport class DetailsEditComponent implements OnInit {\n\n  detailflag: boolean = false;\n  editflag: boolean = false;\n  candidate: Candidates ;\n  candidateDetails: CandidateDetail;\n  candidateForm: FormGroup ;\n  title: string = 'Create New Candidate';\n\n  constructor(private userservie: UserDetailService ,  @Inject(MAT_DIALOG_DATA) public data: any ,\n              private dialogRef: MatDialogRef<DetailsEditComponent>) {\n    if(data.flag === 'new'){\n      this.candidateForm = new FormGroup({\n        candidateName: new FormControl(''),\n        password: new FormControl(''),\n        challengesSolved: new FormControl(''),\n        expertiseLevel: new FormControl(''),\n        skills: new FormControl('')\n      });\n    }else if (data.flag === 'edit'){\n      this.editflag = true;\n      this.title = 'Edit Candidate '\n      let candidate: Candidates = data.candidate ;\n      this.candidateForm = new FormGroup({\n        candidateName: new FormControl(candidate.userName),\n        password: new FormControl(''),\n        challengesSolved: new FormControl(candidate.candidate.candidateChallSolved),\n        expertiseLevel: new FormControl(candidate.candidate.candidateExperLevel),\n        skills: new FormControl('')\n      });\n    }else if(data.flag === 'detail'){\n      this.candidate = data.candidate ;\n      this.userservie.fetchDetailsOfCandidate(this.candidate.candidate.candidateId).subscribe(data=> {\n        this.candidateDetails = data;\n      }, error => {\n        alert(\"Something went wrong !\");\n      })\n      this.detailflag = true;\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    if(this.editflag){\n      alert('Edit functionality is not Implemented')\n      return ;\n    }\n\n    const candidatename = this.candidateForm.controls.candidateName.value;\n    const password = this.candidateForm.controls.password.value;\n    const challengesSolved = this.candidateForm.controls.challengesSolved.value;\n    const expertiseLevel = this.candidateForm.controls.expertiseLevel.value;\n    const skills: string = this.candidateForm.controls.skills.value;\n    if (!!candidatename && !!password && !!challengesSolved && !!expertiseLevel && !!skills){\n        let newrequest: CandidateRegisterRequest = {candidateName: candidatename , password : password,\n          challenges_solved : challengesSolved , expertise_level :  expertiseLevel , skills : []};\n\n        const skillarray: string[] = skills.split(',');\n        skillarray.forEach(\n          skilll => {\n            let newskill: Skills = {skillName : skilll.substring(0 , skilll.indexOf('(') ) ,\n            skillExpertLevel:\n             Number.parseInt(skilll.substring(skilll.indexOf('(')+1 , skilll.indexOf(')')))};\n\n             if(newskill.skillExpertLevel === null || newskill.skillName === null){\n               alert('Please enter skills in correct format ex - java(2) where (2) is expertise level in skill java');\n               return;\n             }\n\n             newrequest.skills.push(newskill);\n          }\n        );\n        // newrequest.skills\n        this.userservie.registerNewCandidate(newrequest)\n      .subscribe(data => {\n        this.dialogRef.close(data);\n      } , error => {\n        alert('Please check you have entered skills in correct format ex - java(10),angular(5) where (2) is expertise level in skill java');\n      });\n    }else{\n      alert('Please fill all the fields');\n    }\n  }\n\n}\n","\n\n  <!-- Sing in  Form -->\n  <section class=\"sign-in\" id=\"sign-inid\">\n    <div class=\"container\" id=\"animationregister\">\n        <div class=\"signin-content\" *ngIf=\"!detailflag\">\n            <div class=\"signin-form\">\n                <h2 class=\"form-title\">{{title}}</h2>\n                <form [formGroup]=\"candidateForm\" class=\"register-form\" id=\"login-form\" >\n                    <div class=\"form-group\">\n                        <label for=\"your_name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\n                        <input type=\"text\" name=\"your_name\" id=\"your_name\" placeholder=\"Candidate Name\" formControlName=\"candidateName\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"your_pass\"><i class=\"zmdi zmdi-lock\"></i></label>\n                        <input type=\"password\" name=\"your_pass\" id=\"your_pass\" placeholder=\"Password\" formControlName=\"password\"/>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"your_name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\n                      <input type=\"number\" name=\"your_name\" id=\"your_name\" placeholder=\"Number of Challenges Solved\" formControlName=\"challengesSolved\"/>\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"your_name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\n                    <input type=\"number\" name=\"your_name\" id=\"exp_level\" placeholder=\"Expertise Level\" formControlName=\"expertiseLevel\"/>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"your_name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\n                  <textarea type=\"number\" name=\"your_name\" id=\"skills\" placeholder=\"add comma seperated skills with expertise level in bracket expertise level should not more than 5 ex -  Java(4),C++(3)  \" formControlName=\"skills\"></textarea>\n              </div>\n                    <!-- <div class=\"form-group\">\n                        <input type=\"checkbox\" name=\"remember-me\" id=\"remember-me\" class=\"agree-term\" />\n                        <label for=\"remember-me\" class=\"label-agree-term\"><span><span></span></span>Remember me</label>\n                    </div> -->\n                    <div class=\"form-group form-button\">\n                        <button (click)=\"onSubmit()\" name=\"signin\" id=\"signin\" class=\"form-submit\" value=\"Log in\" >Submit</button>\n                    </div>\n                </form>\n\n            </div>\n        </div>\n        <div *ngIf=\"detailflag && !!candidate && !!candidateDetails\" class=\"details-cls\" >\n          <h2 class=\"form-title\">Candidate {{candidate.userName}} Details</h2>\n          <mat-card><div>\n            <!-- <div class=\"cardheader\">Candidate Name :<span class=\"nameplate\"> {{candidate.userName}}</span></div> -->\n            <div class=\"cardbody\">\n              <div class=\"candidateExplevel-cls\">\n              <span>Challenges Solved : {{candidateDetails.candidateChallSolved}}</span>\n              <span>Expertise Level : {{candidateDetails.candidateExperLevel}}</span>\n            </div>\n            <h2>Skills</h2>\n              <div class=\"skills-cls\" *ngFor=\"let skill of candidateDetails.candidateSkills\">\n\n                <div>Skill Name : {{skill.skillName}}</div>\n                <div>Expertise Level :{{skill.skillExpertLevel}}</div>\n              </div>\n            </div>\n          </div></mat-card>\n        </div>\n    </div>\n</section>\n","import { UserDetailService } from './../../services/user-detail.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  signinForm: FormGroup ;\n  constructor(private userservie: UserDetailService ,  @Inject(MAT_DIALOG_DATA) public data: any ,\n  private dialogRef: MatDialogRef<LoginComponent>) {\n\n    this.signinForm = new FormGroup({\n      username: new FormControl(''),\n      password: new FormControl('')\n    });\n\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const username = this.signinForm.controls['username'].value;\n    const password = this.signinForm.controls['password'].value;\n    if (!!username && !!password){\n      this.userservie.loginRequest(username , password)\n      .subscribe(data => {\n        localStorage.setItem('userdata' , JSON.stringify(data));\n        this.dialogRef.close('yes');\n      } , error => {\n        alert('Wrong credentials')\n      });\n    }\n  }\n}\n","\n  <!-- Sing in  Form -->\n  <section class=\"sign-in\" id=\"sign-inid\">\n    <h3>Admin credentials are username - 'admin' and password- 'admin'</h3>\n      <div class=\"container\" id=\"animationregister\">\n          <div class=\"signin-content\">\n              <div class=\"signin-form\">\n                  <h2 class=\"form-title\">Sign in</h2>\n                  <form [formGroup]=\"signinForm\" class=\"register-form\" id=\"login-form\" >\n                      <div class=\"form-group\">\n                          <label for=\"your_name\"><i class=\"zmdi zmdi-account material-icons-name\"></i></label>\n                          <input type=\"text\" name=\"your_name\" id=\"your_name\" placeholder=\"Your Username\" formControlName=\"username\"/>\n                      </div>\n                      <div class=\"form-group\">\n                          <label for=\"your_pass\"><i class=\"zmdi zmdi-lock\"></i></label>\n                          <input type=\"password\" name=\"your_pass\" id=\"your_pass\" placeholder=\"Password\" formControlName=\"password\"/>\n                      </div>\n                      <!-- <div class=\"form-group\">\n                          <input type=\"checkbox\" name=\"remember-me\" id=\"remember-me\" class=\"agree-term\" />\n                          <label for=\"remember-me\" class=\"label-agree-term\"><span><span></span></span>Remember me</label>\n                      </div> -->\n                      <div class=\"form-group form-button\">\n                          <button (click)=\"onSubmit()\" name=\"signin\" id=\"signin\" class=\"form-submit\" value=\"Log in\" >Submit</button>\n                      </div>\n                  </form>\n\n              </div>\n          </div>\n      </div>\n  </section>\n","import { CandidateRegisterRequest } from './../dto/candidateRegisterReq';\r\nimport { Users } from './../dto/users';\r\nimport { Candidates, CandidateDetail } from './../dto/candidates';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDetailService {\r\n\r\n  BASE_URL:string = \"http://localhost:8080\";\r\n\r\n  constructor(private http:HttpClient) {\r\n\r\n  }\r\n\r\n  fetchAllCandidates(): Observable<Candidates[]>{\r\n\r\n    return this.http.get<Candidates[]>(this.BASE_URL + '/getAllUsers');\r\n\r\n  }\r\n\r\n  loginRequest(username: string , password: string): Observable<Users>{\r\n    return this.http.post<Users>(this.BASE_URL + '/login' , {username , password});\r\n  }\r\n\r\n  registerNewCandidate(candidateData: CandidateRegisterRequest): Observable<Candidates>{\r\n    return this.http.post<Candidates>(this.BASE_URL + '/newcandidate' , candidateData);\r\n  }\r\n\r\n  castVote(candidateId: number , userId: number): Observable<boolean>{\r\n    return this.http.post<boolean>(this.BASE_URL + '/castVote' , {candidateId , userId});\r\n  }\r\n\r\n  fetchDetailsOfCandidate(candidateId: number): Observable<CandidateDetail>{\r\n    return this.http.get<CandidateDetail>(this.BASE_URL + '/getDetails/'+candidateId);\r\n  }\r\n\r\n  deleteCandidate(candidateId: number , userId: number): Observable<boolean>{\r\n    return this.http.put<boolean>(this.BASE_URL + '/deleteCandidate/'+candidateId+'/'+userId , {});\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}